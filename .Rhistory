library(ggplot2)
p_data = read.csv("points.csv", sep = ",")
k <- 0
weight_vector <- c(0.1, 0, 0)
lamda_learning_rate <- 0.1
gamma_thres <- 0.001
average_error <- c()
repeat
{
total_error <- 0
for (i in 1:nrow(p_data))
{
predicted <- sign((weight_vector[1] * p_data[i,2]) + (weight_vector[2] * p_data[i,3]) + (weight_vector[3] * p_data[i,4]))
current_error <- p_data[i,1] - predicted
total_error <- total_error + abs(current_error)
for (j in 1:length(weight_vector))
{
weight_vector[j] <- weight_vector[j] + ( lamda_learning_rate * current_error * p_data[i,j+1])
}
}
k <- k + 1
average_error[k] <- (total_error/nrow(p_data))
if(total_error/nrow(p_data) <= gamma_thres)
break
}
line_slope <- -(weight_vector[2]/weight_vector[3])
line_intercept <- -(weight_vector[1]/weight_vector[3])
ggplot(p_data, aes(x = p_data[,3], y = p_data[,4])) +
geom_point(aes(colour=label),size=1.5) +
geom_abline(intercept= line_intercept, slope = line_slope) +
xlab("X1") +
ylab("X2") +
ggtitle("Perceptron model ")
sprintf("No of epochs required are %d", k)
print("Average errors per epoch")
print(average_error)
sprintf("Trained Weights :- Bias: %f, Weight W1: %f, Weight W2: %f", weight_vector[1], weight_vector[2], weight_vector[3])
